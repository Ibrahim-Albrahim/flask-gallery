#### main domain for hemo7f12 ##
server {
    server_name hemo7f12.me www.hemo7f12.me mail.hemo7f12.me;
    listen 80;
    listen [::]:80;

    include conf.d/includes-optional/cloudflare.conf;

    set $CPANEL_APACHE_PROXY_IP 31.220.62.4;
    set $CPANEL_APACHE_PROXY_SSL_IP 31.220.62.4;
    set $CPANEL_APACHE_PROXY_REQ_PORT $CPANEL_APACHE_PROXY_PORT;
    set $CPANEL_APACHE_PROXY_REQ_IP $CPANEL_APACHE_PROXY_IP;
    if ($scheme = https) {
        set $CPANEL_APACHE_PROXY_REQ_PORT $CPANEL_APACHE_PROXY_SSL_PORT;
        set $CPANEL_APACHE_PROXY_REQ_IP $CPANEL_APACHE_PROXY_SSL_IP;
    }

    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /var/cpanel/ssl/apache_tls/hemo7f12.me/combined;
    ssl_certificate_key /var/cpanel/ssl/apache_tls/hemo7f12.me/combined;
        
    ssl_protocols TLSv1.2 TLSv1.3;
    proxy_ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256;
    proxy_ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256;
            
    root /home/hemo7f12/public_html;

    location /cpanelwebcall {
        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass http://127.0.0.1:2082/cpanelwebcall;
    }

    location /Microsoft-Server-ActiveSync {
        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass http://127.0.0.1:2090/Microsoft-Server-ActiveSync;
    }

    location / {

        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass $scheme://$CPANEL_APACHE_PROXY_REQ_IP:$CPANEL_APACHE_PROXY_REQ_PORT;
    }

            
    include conf.d/server-includes/*.conf;
    include conf.d/users/hemo7f12/*.conf;
    include conf.d/users/hemo7f12/hemo7f12.me/*.conf;
}

# nginx does not support a subdomain of a wildcard domain
# Example:  whm.*.mydomain.tld would not be allowed

#### SSL Proxies for hemo7f12.me ##
server {
    listen 80;
    listen [::]:80;

    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /var/cpanel/ssl/apache_tls/hemo7f12.me/combined;
    ssl_certificate_key /var/cpanel/ssl/apache_tls/hemo7f12.me/combined;

    server_name  cpanel.hemo7f12.me;

    include conf.d/includes-optional/cloudflare.conf;

    location /.well-known/cpanel-dcv {
        root /home/hemo7f12/public_html;
    }

    location /.well-known/pki-validation {
        root /home/hemo7f12/public_html;
    }

    location /.well-known/acme-challenge {
        root /home/hemo7f12/public_html;
    }

    location / {
        # Force https for service subdomains
        if ($scheme = http) {
            return 301 https://$host$request_uri;
        }

        # since proxy_set_header can not be done inside an if block we jump though hoops
        # default value is empty because the header will be only sent if $value is not empty
        set $upgrade_value "";
        set $connection_value "";

        if ($http_upgrade ~* ^websocket$) {
            set $upgrade_value $http_upgrade;
            set $connection_value "upgrade";
        }

        # In nginx you still need to use `http` for protocol in your url and not `ws`.
        # The `ws` and `wss` protocol are required for browser, in the nginx side we add
        #   the headers below to handle the websockets over `http`.
        proxy_set_header Upgrade $upgrade_value; # the header will be only sent if $upgrade_value is not empty
        proxy_set_header Connection $connection_value; # the header will be only sent if $connection_value is not empty
        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass_header Upgrade; # this is hidden in cpanel-proxy.conf, but is needed for websockets
        proxy_pass http://127.0.0.1:2082;
    }
}

server {
    listen 80;
    listen [::]:80;

    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /var/cpanel/ssl/apache_tls/hemo7f12.me/combined;
    ssl_certificate_key /var/cpanel/ssl/apache_tls/hemo7f12.me/combined;

    server_name  cpcalendars.hemo7f12.me;

    include conf.d/includes-optional/cloudflare.conf;

    location /.well-known/cpanel-dcv {
        root /home/hemo7f12/public_html;
    }

    location /.well-known/pki-validation {
        root /home/hemo7f12/public_html;
    }

    location /.well-known/acme-challenge {
        root /home/hemo7f12/public_html;
    }

    location / {
        # Force https for service subdomains
        if ($scheme = http) {
            return 301 https://$host$request_uri;
        }

        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass http://127.0.0.1:2079;
    }
}

server {
    listen 80;
    listen [::]:80;

    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /var/cpanel/ssl/apache_tls/hemo7f12.me/combined;
    ssl_certificate_key /var/cpanel/ssl/apache_tls/hemo7f12.me/combined;

    server_name  cpcontacts.hemo7f12.me;

    include conf.d/includes-optional/cloudflare.conf;

    location /.well-known/cpanel-dcv {
        root /home/hemo7f12/public_html;
    }

    location /.well-known/pki-validation {
        root /home/hemo7f12/public_html;
    }

    location /.well-known/acme-challenge {
        root /home/hemo7f12/public_html;
    }

    location / {
        # Force https for service subdomains
        if ($scheme = http) {
            return 301 https://$host$request_uri;
        }

        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass http://127.0.0.1:2079;
    }
}

server {
    listen 80;
    listen [::]:80;

    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /var/cpanel/ssl/apache_tls/hemo7f12.me/combined;
    ssl_certificate_key /var/cpanel/ssl/apache_tls/hemo7f12.me/combined;

    server_name  webdisk.hemo7f12.me;

    include conf.d/includes-optional/cloudflare.conf;

    location /.well-known/cpanel-dcv {
        root /home/hemo7f12/public_html;
    }

    location /.well-known/pki-validation {
        root /home/hemo7f12/public_html;
    }

    location /.well-known/acme-challenge {
        root /home/hemo7f12/public_html;
    }

    location / {
        # Force https for service subdomains
        if ($scheme = http) {
            return 301 https://$host$request_uri;
        }

        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass http://127.0.0.1:2077;
    }
}

server {
    listen 80;
    listen [::]:80;

    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /var/cpanel/ssl/apache_tls/hemo7f12.me/combined;
    ssl_certificate_key /var/cpanel/ssl/apache_tls/hemo7f12.me/combined;

    server_name  webmail.hemo7f12.me;

    include conf.d/includes-optional/cloudflare.conf;

    location /.well-known/cpanel-dcv {
        root /home/hemo7f12/public_html;
    }

    location /.well-known/pki-validation {
        root /home/hemo7f12/public_html;
    }

    location /.well-known/acme-challenge {
        root /home/hemo7f12/public_html;
    }

    location / {
        # Force https for service subdomains
        if ($scheme = http) {
            return 301 https://$host$request_uri;
        }

        # since proxy_set_header can not be done inside an if block we jump though hoops
        # default value is empty because the header will be only sent if $value is not empty
        set $upgrade_value "";
        set $connection_value "";

        if ($http_upgrade ~* ^websocket$) {
            set $upgrade_value $http_upgrade;
            set $connection_value "upgrade";
        }

        # In nginx you still need to use `http` for protocol in your url and not `ws`.
        # The `ws` and `wss` protocol are required for browser, in the nginx side we add
        #   the headers below to handle the websockets over `http`.
        proxy_set_header Upgrade $upgrade_value; # the header will be only sent if $upgrade_value is not empty
        proxy_set_header Connection $connection_value; # the header will be only sent if $connection_value is not empty
        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass_header Upgrade; # this is hidden in cpanel-proxy.conf, but is needed for websockets
        proxy_pass http://127.0.0.1:2095;
    }
}

server {
    listen 80;
    listen [::]:80;

    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /var/cpanel/ssl/apache_tls/hemo7f12.me/combined;
    ssl_certificate_key /var/cpanel/ssl/apache_tls/hemo7f12.me/combined;

    server_name  whm.hemo7f12.me;

    include conf.d/includes-optional/cloudflare.conf;

    location /.well-known/cpanel-dcv {
        root /home/hemo7f12/public_html;
    }

    location /.well-known/pki-validation {
        root /home/hemo7f12/public_html;
    }

    location /.well-known/acme-challenge {
        root /home/hemo7f12/public_html;
    }

    location / {
        # Force https for service subdomains
        if ($scheme = http) {
            return 301 https://$host$request_uri;
        }

        # since proxy_set_header can not be done inside an if block we jump though hoops
        # default value is empty because the header will be only sent if $value is not empty
        set $upgrade_value "";
        set $connection_value "";

        if ($http_upgrade ~* ^websocket$) {
            set $upgrade_value $http_upgrade;
            set $connection_value "upgrade";
        }

        # In nginx you still need to use `http` for protocol in your url and not `ws`.
        # The `ws` and `wss` protocol are required for browser, in the nginx side we add
        #   the headers below to handle the websockets over `http`.
        proxy_set_header Upgrade $upgrade_value; # the header will be only sent if $upgrade_value is not empty
        proxy_set_header Connection $connection_value; # the header will be only sent if $connection_value is not empty
        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass_header Upgrade; # this is hidden in cpanel-proxy.conf, but is needed for websockets
        proxy_pass http://127.0.0.1:2086;
    }
}

#### sub domains for hemo7f12 ##
# server {
#     server_name gallery.hemo7f12.me www.gallery.hemo7f12.me mail.gallery.hemo7f12.me;
#     listen 80;
#     listen [::]:80;

#     include conf.d/includes-optional/cloudflare.conf;

#     set $CPANEL_APACHE_PROXY_IP 31.220.62.4;
#     set $CPANEL_APACHE_PROXY_SSL_IP 31.220.62.4;
#     set $CPANEL_APACHE_PROXY_REQ_PORT $CPANEL_APACHE_PROXY_PORT;
#     set $CPANEL_APACHE_PROXY_REQ_IP $CPANEL_APACHE_PROXY_IP;
#     if ($scheme = https) {
#         set $CPANEL_APACHE_PROXY_REQ_PORT $CPANEL_APACHE_PROXY_SSL_PORT;
#         set $CPANEL_APACHE_PROXY_REQ_IP $CPANEL_APACHE_PROXY_SSL_IP;
#     }

#     listen 443 ssl;
#     listen [::]:443 ssl;

#     ssl_certificate /var/cpanel/ssl/apache_tls/gallery.hemo7f12.me/combined;
#     ssl_certificate_key /var/cpanel/ssl/apache_tls/gallery.hemo7f12.me/combined;
        
#     ssl_protocols TLSv1.2 TLSv1.3;
#     proxy_ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_prefer_server_ciphers on;
#     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256;
#     proxy_ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256;
            
#     root /home/hemo7f12/public_html/gallery;

#     location /api {
#         include uwsgi_params;
#         uwsgi_pass unix:/home/hemo7f12/public_html/gallery/api/app.sock;
#     }

#     location /cpanelwebcall {
#         include conf.d/includes-optional/cpanel-proxy.conf;
#         proxy_pass http://127.0.0.1:2082/cpanelwebcall;
#     }

#     location /Microsoft-Server-ActiveSync {
#         include conf.d/includes-optional/cpanel-proxy.conf;
#         proxy_pass http://127.0.0.1:2090/Microsoft-Server-ActiveSync;
#     }

#     location / {

#         include conf.d/includes-optional/cpanel-proxy.conf;
#         proxy_pass $scheme://$CPANEL_APACHE_PROXY_REQ_IP:$CPANEL_APACHE_PROXY_REQ_PORT;
#     }

            
#     include conf.d/server-includes/*.conf;
#     include conf.d/users/hemo7f12/*.conf;
#     include conf.d/users/hemo7f12/gallery.hemo7f12.me/*.conf;
# }

# nginx does not support a subdomain of a wildcard domain
# Example:  whm.*.mydomain.tld would not be allowed

#### SSL Proxies for gallery.hemo7f12.me ##
server {
    listen 80;
    listen [::]:80;

    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /var/cpanel/ssl/apache_tls/gallery.hemo7f12.me/combined;
    ssl_certificate_key /var/cpanel/ssl/apache_tls/gallery.hemo7f12.me/combined;

    server_name  cpanel.gallery.hemo7f12.me;

    include conf.d/includes-optional/cloudflare.conf;

    location /.well-known/cpanel-dcv {
        root /home/hemo7f12/public_html/gallery;
    }

    location /.well-known/pki-validation {
        root /home/hemo7f12/public_html/gallery;
    }

    location /.well-known/acme-challenge {
        root /home/hemo7f12/public_html/gallery;
    }

    location / {
        # Force https for service subdomains
        if ($scheme = http) {
            return 301 https://$host$request_uri;
        }

        # since proxy_set_header can not be done inside an if block we jump though hoops
        # default value is empty because the header will be only sent if $value is not empty
        set $upgrade_value "";
        set $connection_value "";

        if ($http_upgrade ~* ^websocket$) {
            set $upgrade_value $http_upgrade;
            set $connection_value "upgrade";
        }

        # In nginx you still need to use `http` for protocol in your url and not `ws`.
        # The `ws` and `wss` protocol are required for browser, in the nginx side we add
        #   the headers below to handle the websockets over `http`.
        proxy_set_header Upgrade $upgrade_value; # the header will be only sent if $upgrade_value is not empty
        proxy_set_header Connection $connection_value; # the header will be only sent if $connection_value is not empty
        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass_header Upgrade; # this is hidden in cpanel-proxy.conf, but is needed for websockets
        proxy_pass http://127.0.0.1:2082;
    }
}

server {
    listen 80;
    listen [::]:80;

    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /var/cpanel/ssl/apache_tls/gallery.hemo7f12.me/combined;
    ssl_certificate_key /var/cpanel/ssl/apache_tls/gallery.hemo7f12.me/combined;

    server_name  cpcalendars.gallery.hemo7f12.me;

    include conf.d/includes-optional/cloudflare.conf;

    location /.well-known/cpanel-dcv {
        root /home/hemo7f12/public_html/gallery;
    }

    location /.well-known/pki-validation {
        root /home/hemo7f12/public_html/gallery;
    }

    location /.well-known/acme-challenge {
        root /home/hemo7f12/public_html/gallery;
    }

    location / {
        # Force https for service subdomains
        if ($scheme = http) {
            return 301 https://$host$request_uri;
        }

        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass http://127.0.0.1:2079;
    }
}

server {
    listen 80;
    listen [::]:80;

    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /var/cpanel/ssl/apache_tls/gallery.hemo7f12.me/combined;
    ssl_certificate_key /var/cpanel/ssl/apache_tls/gallery.hemo7f12.me/combined;

    server_name  cpcontacts.gallery.hemo7f12.me;

    include conf.d/includes-optional/cloudflare.conf;

    location /.well-known/cpanel-dcv {
        root /home/hemo7f12/public_html/gallery;
    }

    location /.well-known/pki-validation {
        root /home/hemo7f12/public_html/gallery;
    }

    location /.well-known/acme-challenge {
        root /home/hemo7f12/public_html/gallery;
    }

    location / {
        # Force https for service subdomains
        if ($scheme = http) {
            return 301 https://$host$request_uri;
        }

        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass http://127.0.0.1:2079;
    }
}

server {
    listen 80;
    listen [::]:80;

    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /var/cpanel/ssl/apache_tls/gallery.hemo7f12.me/combined;
    ssl_certificate_key /var/cpanel/ssl/apache_tls/gallery.hemo7f12.me/combined;

    server_name  webdisk.gallery.hemo7f12.me;

    include conf.d/includes-optional/cloudflare.conf;

    location /.well-known/cpanel-dcv {
        root /home/hemo7f12/public_html/gallery;
    }

    location /.well-known/pki-validation {
        root /home/hemo7f12/public_html/gallery;
    }

    location /.well-known/acme-challenge {
        root /home/hemo7f12/public_html/gallery;
    }

    location / {
        # Force https for service subdomains
        if ($scheme = http) {
            return 301 https://$host$request_uri;
        }

        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass http://127.0.0.1:2077;
    }
}

server {
    listen 80;
    listen [::]:80;

    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /var/cpanel/ssl/apache_tls/gallery.hemo7f12.me/combined;
    ssl_certificate_key /var/cpanel/ssl/apache_tls/gallery.hemo7f12.me/combined;

    server_name  webmail.gallery.hemo7f12.me;

    include conf.d/includes-optional/cloudflare.conf;

    location /.well-known/cpanel-dcv {
        root /home/hemo7f12/public_html/gallery;
    }

    location /.well-known/pki-validation {
        root /home/hemo7f12/public_html/gallery;
    }

    location /.well-known/acme-challenge {
        root /home/hemo7f12/public_html/gallery;
    }

    location / {
        # Force https for service subdomains
        if ($scheme = http) {
            return 301 https://$host$request_uri;
        }

        # since proxy_set_header can not be done inside an if block we jump though hoops
        # default value is empty because the header will be only sent if $value is not empty
        set $upgrade_value "";
        set $connection_value "";

        if ($http_upgrade ~* ^websocket$) {
            set $upgrade_value $http_upgrade;
            set $connection_value "upgrade";
        }

        # In nginx you still need to use `http` for protocol in your url and not `ws`.
        # The `ws` and `wss` protocol are required for browser, in the nginx side we add
        #   the headers below to handle the websockets over `http`.
        proxy_set_header Upgrade $upgrade_value; # the header will be only sent if $upgrade_value is not empty
        proxy_set_header Connection $connection_value; # the header will be only sent if $connection_value is not empty
        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass_header Upgrade; # this is hidden in cpanel-proxy.conf, but is needed for websockets
        proxy_pass http://127.0.0.1:2095;
    }
}

server {
    listen 80;
    listen [::]:80;

    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /var/cpanel/ssl/apache_tls/gallery.hemo7f12.me/combined;
    ssl_certificate_key /var/cpanel/ssl/apache_tls/gallery.hemo7f12.me/combined;

    server_name  whm.gallery.hemo7f12.me;

    include conf.d/includes-optional/cloudflare.conf;

    location /.well-known/cpanel-dcv {
        root /home/hemo7f12/public_html/gallery;
    }

    location /.well-known/pki-validation {
        root /home/hemo7f12/public_html/gallery;
    }

    location /.well-known/acme-challenge {
        root /home/hemo7f12/public_html/gallery;
    }

    location / {
        # Force https for service subdomains
        if ($scheme = http) {
            return 301 https://$host$request_uri;
        }

        # since proxy_set_header can not be done inside an if block we jump though hoops
        # default value is empty because the header will be only sent if $value is not empty
        set $upgrade_value "";
        set $connection_value "";

        if ($http_upgrade ~* ^websocket$) {
            set $upgrade_value $http_upgrade;
            set $connection_value "upgrade";
        }

        # In nginx you still need to use `http` for protocol in your url and not `ws`.
        # The `ws` and `wss` protocol are required for browser, in the nginx side we add
        #   the headers below to handle the websockets over `http`.
        proxy_set_header Upgrade $upgrade_value; # the header will be only sent if $upgrade_value is not empty
        proxy_set_header Connection $connection_value; # the header will be only sent if $connection_value is not empty
        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass_header Upgrade; # this is hidden in cpanel-proxy.conf, but is needed for websockets
        proxy_pass http://127.0.0.1:2086;
    }
}
